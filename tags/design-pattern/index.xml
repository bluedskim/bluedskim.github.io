<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Design Pattern on Do What You Want To Do</title>
    <link>https://bluedskim.github.io/tags/design-pattern/</link>
    <description>Recent content in Design Pattern on Do What You Want To Do</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <lastBuildDate>Tue, 25 May 2021 12:17:16 +0900</lastBuildDate><atom:link href="https://bluedskim.github.io/tags/design-pattern/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 디자인 패턴-08.Facade</title>
      <link>https://bluedskim.github.io/posts/tech/javadesignpattern-08.facade/</link>
      <pubDate>Tue, 25 May 2021 12:17:16 +0900</pubDate>
      
      <guid>https://bluedskim.github.io/posts/tech/javadesignpattern-08.facade/</guid>
      <description>(Java 디자인 패턴 스터디 모집 중 : https://github.com/bluedskim/javaDesignPatterns) Facade 패턴 다이어그램 (출처:https://www.geeksforgeeks.org/facade-design-</description>
    </item>
    
    <item>
      <title>Java 디자인 패턴-07.State</title>
      <link>https://bluedskim.github.io/posts/tech/javadesignpattern-07.state/</link>
      <pubDate>Mon, 24 May 2021 08:46:28 +0900</pubDate>
      
      <guid>https://bluedskim.github.io/posts/tech/javadesignpattern-07.state/</guid>
      <description>(Java 디자인 패턴 스터디 모집 중 : https://github.com/bluedskim/javaDesignPatterns) 패턴 다이어그램 &amp;ldquo;어떤 객체의 상태에 따라 행위가 변경되는 경우 유용한 패턴&amp;rdquo; (출처:https:/</description>
    </item>
    
    <item>
      <title>Java 디자인 패턴-05.Proxy</title>
      <link>https://bluedskim.github.io/posts/tech/javadesignpattern-05.proxy/</link>
      <pubDate>Tue, 18 May 2021 12:23:26 +0900</pubDate>
      
      <guid>https://bluedskim.github.io/posts/tech/javadesignpattern-05.proxy/</guid>
      <description>(Java 디자인 패턴 스터디 모집 중 : https://github.com/bluedskim/javaDesignPatterns) 패턴 다이어그램 &amp;ldquo;특정 클래스 대신 그 클래스와 동일한 인터페이스를 구현한 래퍼 wrapper 클래스 Proxy 를 이용한다&amp;rdquo</description>
    </item>
    
    <item>
      <title>Java 디자인 패턴-04.Iterators</title>
      <link>https://bluedskim.github.io/posts/tech/javadesignpattern-04.iterators/</link>
      <pubDate>Fri, 14 May 2021 08:57:45 +0900</pubDate>
      
      <guid>https://bluedskim.github.io/posts/tech/javadesignpattern-04.iterators/</guid>
      <description>(Java 디자인 패턴 스터디 모집 중 : https://github.com/bluedskim/javaDesignPatterns) 패턴 다이어그램 &amp;ldquo;하나의 집합Collection의 모든 요소를 모두 접근하는 방법은 여러가지가 있을 수 있다&amp;r</description>
    </item>
    
    <item>
      <title>Java 디자인 패턴-03.Command</title>
      <link>https://bluedskim.github.io/posts/tech/javadesignpattern-03.command/</link>
      <pubDate>Wed, 12 May 2021 00:48:24 +0900</pubDate>
      
      <guid>https://bluedskim.github.io/posts/tech/javadesignpattern-03.command/</guid>
      <description>(Java 디자인 패턴 스터디 모집 중 : https://github.com/bluedskim/javaDesignPatterns) (출처:https://refactoring.guru/design-patterns/command) 해결하</description>
    </item>
    
    <item>
      <title>Java 디자인 패턴-02.Factory Method</title>
      <link>https://bluedskim.github.io/posts/tech/javadesignpattern-factory/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0900</pubDate>
      
      <guid>https://bluedskim.github.io/posts/tech/javadesignpattern-factory/</guid>
      <description>(Java 디자인 패턴 스터디 모집 중 : https://github.com/bluedskim/javaDesignPatterns) (출처:Abstract Factory Design Pattern in C#) 해결하려는 문제 생성자를 직접 호출해서 객체를 생성하는 경우 해당 객체와 클라이언트가 강하</description>
    </item>
    
    <item>
      <title>Java 디자인 패턴-01.Singleton</title>
      <link>https://bluedskim.github.io/posts/tech/javadesignpattern-singleton/</link>
      <pubDate>Fri, 07 May 2021 12:13:37 +0900</pubDate>
      
      <guid>https://bluedskim.github.io/posts/tech/javadesignpattern-singleton/</guid>
      <description>(Java 디자인 패턴 스터디 모집 중 : https://github.com/bluedskim/javaDesignPatterns) (출처 : refactoring.guru : Singleton pattern) 해결하려는 문제 공유된 자원은 대체로 한정적이다. 이 자원을 무분별하게 사용하는 경우 쉽게 고갈될 수 있다. 용도</description>
    </item>
    
  </channel>
</rss>
